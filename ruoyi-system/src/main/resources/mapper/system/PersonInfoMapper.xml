<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PersonInfoMapper">
    
    <resultMap type="PersonInfo" id="PersonInfoResult">
        <result property="peopleId"    column="people_id"    />
        <result property="name"    column="name"    />
        <result property="sex"    column="sex"    />
        <result property="phonenumber"    column="phonenumber"    />
        <result property="status"    column="status"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="address"    column="address"    />
    </resultMap>

    <sql id="selectPersonInfoVo">
        select people_id, name, sex, phonenumber, status, ancestors, address from people_table
    </sql>

    <select id="selectPersonInfoList" parameterType="PersonInfo" resultMap="PersonInfoResult">
        <include refid="selectPersonInfoVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and phonenumber = #{phonenumber}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="ancestors != null  and ancestors != ''"> and ancestors = #{ancestors}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
        </where>
    </select>

    <select id="selectPersonInfoListByStatus" parameterType="String" resultMap="PersonInfoResult">
        <include refid="selectPersonInfoVo"/>
        where status = #{status}
    </select>

    <select id="selectPersonInfoByPeopleId" parameterType="String" resultMap="PersonInfoResult">
        <include refid="selectPersonInfoVo"/>
        where people_id = #{peopleId}
    </select>

        
    <insert id="insertPersonInfo" parameterType="PersonInfo">
        insert into people_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="peopleId != null">people_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="sex != null">sex,</if>
            <if test="phonenumber != null">phonenumber,</if>
            <if test="status != null">status,</if>
            <if test="ancestors != null and ancestors != ''">ancestors,</if>
            <if test="address != null">address,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="peopleId != null">#{peopleId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="sex != null">#{sex},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="status != null">#{status},</if>
            <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
            <if test="address != null">#{address},</if>
         </trim>
    </insert>

    <update id="updatePersonInfo" parameterType="PersonInfo">
        update people_table
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
            <if test="status != null">status = #{status},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="address != null">address = #{address},</if>
        </trim>
        where people_id = #{peopleId}
    </update>

    <delete id="deletePersonInfoByPeopleId" parameterType="String">
        delete from people_table where people_id = #{peopleId}
    </delete>

    <delete id="deletePersonInfoByPeopleIds" parameterType="String">
        delete from people_table where people_id in 
        <foreach item="peopleId" collection="array" open="(" separator="," close=")">
            #{peopleId}
        </foreach>
    </delete>
</mapper>